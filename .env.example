## MeiliSearch Config ##

# URL of MeiliSearch instance
MEILISEARCH_HOST=http://localhost:7700

# Use secret key or master key here
MEILISEARCH_API_KEY=

# TAS will prefix created index with this value, useful for shared MeiliSearch instance
MEILISEARCH_INDEX_PREFIX=tas_


## Telegram Config ##

# Bot token
TELEGRAM_BOT_TOKEN=1234:somethingrandom

# Use webhook
TELEGRAM_WEBHOOK=false

# Some random text used in webhook url, use bot token if not set (but not recommended)
TELEGRAM_WEBHOOK_UPDATE_TOKEN=anythingyouwant

# Wheather to follow edits
TELEGRAM_FOLLOW_EDIT=true


## HTTP Config ##

# Public accessable URL
HTTP_BASE_URL=https://example.com:3100

# Search UI URL
HTTP_UI_URL=https://example.com:3100

# Listen host
HTTP_HOST=0.0.0.0

# Listen port
HTTP_PORT=3100


## Auth Config ##

# Used for signing search tokens, KEEP IT SAFE or data may be leaked
AUTH_JWT_SECRET="you will need this long enough"

# Used for import archive, keep it safe or you may lose your data
AUTH_IMPORT_TOKEN="you will keep this safe dont you"


## Cache Config ##

# Cache store, which used for user avatar and message queue; 'memory' | 'redis'
CACHE_STORE=redis

# Redis related config
CACHE_REDIS_HOST=localhost
CACHE_REDIS_PORT=6379
CACHE_REDIS_PASSWORD=
CACHE_REDIS_DB=0
CACHE_REDIS_KEY_PREFIX=tas_

## OCR Config ##

# Enable OCR, if OCR is not enabled then texts in image will not be searchable
OCR_ENABLE=false

# OCR Driver, 'google' | 'custom' | string, string is the driver module installed from npm
OCR_DRIVER=google

# OCR Enpoint
# for google, use 'eu-vision.googleapis.com' or 'us-vision.googleapis.com'
# for custom, use full base url of your endpoint, like 'https://www.example.com/api/v1/ocr'
OCR_ENDPOINT=eu-vision.googleapis.com

# OCR Credentials
# for google, this will be ignored, you should set GOOGLE_APPLICATION_CREDENTIALS below
# for custom, use the bearer token of your endpoint
OCR_CREDENTIALS=

## Queue Config ##

# Enable queue, if queue is not enabled then all task will be done in-process
QUEUE_ENABLE=false

# Redis related config
QUEUE_REDIS_HOST=${CACHE_REDIS_HOST}
QUEUE_REDIS_PORT=${CACHE_REDIS_PORT}
QUEUE_REDIS_PASSWORD=${CACHE_REDIS_PASSWORD}
QUEUE_REDIS_DB=${CACHE_REDIS_DB}
QUEUE_REDIS_KEY_PREFIX=${CACHE_REDIS_KEY_PREFIX}_queue

## Third Party Integrations ##

# Set to the path of the JSON file that contains your service account key if you are using google cloud services
GOOGLE_APPLICATION_CREDENTIALS=/path/to/credentials/of/google.json
